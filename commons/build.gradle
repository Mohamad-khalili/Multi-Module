plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kept)
}
def globalDependencies = rootProject.ext
apply from: "$rootProject.projectDir/commons.gradle"

android {
    namespace 'com.multimodule.commons'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "BASE_HOST", "\"https://beta-base.example.com\""
            buildConfigField "String", "CDN_HOST", "\"https://beta-cdn.example.com\""
            buildConfigField "String", "IDENTITY_HOST", "\"https://beta-identity.example.com\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            buildConfigField "String", "VERSION_NAME", "\"${defaultConfig.versionName}\""
            buildConfigField "String", "BASE_HOST", "\"https://base.example.com\""
            buildConfigField "String", "CDN_HOST", "\"https://cdn.example.com\""
            buildConfigField "String", "IDENTITY_HOST", "\"https://identity.example.com\""


            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    Map<String, String> dependencies = globalDependencies.commonDependencies
    implementation project(":core")
}